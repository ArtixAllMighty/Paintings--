package subaraki.paintings.mod;

import net.minecraft.entity.item.EntityPainting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.client.registry.RenderingRegistry;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.Logger;
import subaraki.paintings.config.ConfigurationHandler;
import subaraki.paintings.mod.client.RenderPaintingLate;
import subaraki.paintings.mod.network.PaintingsChannel;

import java.io.File;
import java.util.Collections;


@Mod(modid = Paintings.MODID, name = Paintings.NAME, version = Paintings.VERSION, dependencies = "after:PaintingSelGui")
public class Paintings {

    public static final String MODID = "morepaintings";
    public static final String VERSION = "1.11.2-3.2.1.1";
    public static final String NAME = "Paintings++";

    public static Logger log;

    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {
        log = event.getModLog();

        ModMetadata modMeta = event.getModMetadata();
        modMeta.authorList = Collections.singletonList("Subaraki");
        modMeta.autogenerated = false;
        modMeta.credits = "Subaraki";
        modMeta.description = "More Paintings! Check the config file for options.";
        modMeta.url = "http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/1287285-/";

        ConfigurationHandler.instance.patternsDirectory = new File(event.getModConfigurationDirectory(), MODID + "/patterns");
        ConfigurationHandler.instance.configurationFile = event.getSuggestedConfigurationFile();
        ConfigurationHandler.instance.loadConfig();

        PaintingsChannel.registerMessages();
        MinecraftForge.EVENT_BUS.register(PaintingsEventHandler.class);

        if (FMLCommonHandler.instance().getEffectiveSide().isClient()) {
            RenderingRegistry.registerEntityRenderingHandler(EntityPainting.class, RenderPaintingLate::new);
        }
    }

    @EventHandler
    public void serverStarting(FMLServerStartingEvent event) {

        if (PaintingsPattern.load(ConfigurationHandler.instance.texture)) {
            PaintingsIgnore.ignoreVanillaPaintings();
            PaintingsPattern.instance.parseJson();
        }
        PaintingsIgnore.dumpEnumArt(Level.DEBUG);
    }
}

